{"version":3,"sources":["webpack:///src/components/tree-transfer.vue","webpack:///./src/components/tree-transfer.vue?4816","webpack:///./src/components/tree-transfer.vue","webpack:///src/App.vue","webpack:///./src/App.vue?056f","webpack:///./src/App.vue","webpack:///./src/main.js"],"names":["tree_transfer","name","data","treeKeys","treeLength","treeIndeterminate","treeCheckAll","treeExpandedKeys","treeCheckKeys","filterTree","filterList","archiveFirst","rightList","listCheckKey","listCheckAll","props","width","type","String","default","height","titles","Array","dataSource","defaultProps","Object","label","children","nodeKey","filterable","Boolean","openAll","defaultCheckedKeys","defaultExpandedKeys","filterPlaceholder","accordion","renderAfterExpand","expandOnClickNode","fatherChoose","isRadio","buttonTexts","computed","treeFromData","JSON","parse","stringify_default","this","treeTitle","slicedToArray_default","listTitle","leftButtonText","rightButtonText","listIndeterminate","checkedLength","length","transferDisabled","_this","rightKeys","map","item","result","every","indexOf","watch","val","oldVal","movedKeys","concat","toConsumableArray_default","filter","v","updateListAllChecked","$emit","$refs","newval","oldval","reg","RegExp","test","findItem","setDisable","chooseDisable","handler","_form","set_default","a","immediate","mounted","setTreeMsg","methods","fromTreeChecked","nodeObj","_this2","getCheckedKeys","setChecked","id","currentKeys","findChildKey","console","log","$nextTick","treeAllBoxChange","_this3","listKey","filterNodeFrom","value","filterNode","treeToList","arrayDeWeighting","_this4","arrayCheckedNodes","getCheckedNodes","has","some","ite","chooseId","listAllBoxChange","_this5","_this6","keys","listToTree","_this7","includes","arr","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","get_iterator_default","next","done","push","disabled","err","return","leftKeys","arguments","setCheckedKeys","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","$set","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","getTreeChecked","leftHarfKeys","getHalfCheckedKeys","leftNodes","leftHalfNodes","getHalfCheckedNodes","clearQuery","components_tree_transfer","render","_vm","_h","$createElement","_c","_self","staticClass","style","attrs","indeterminate","on","change","model","callback","$$v","expression","_v","_s","clearable","size","placeholder","slot","_e","ref","show-checkbox","node-key","default-expand-all","filter-node-method","render-after-expand","expand-on-click-node","default-checked-keys","default-expanded-keys","check-strictly","check","$slots","_t","click","$event","_l","key","staticRenderFns","tree","App","components","treeTransfer","__webpack_require__","normalizeComponent","ssrContext","defaultValue","handleChange","direction","handleLeftCheckChange","handleRightCheckChange","selectortype_template_index_0_src_App","data-source","father-choose","update:dataSource","update:data-source","left-check-change","right-check-change","src_App","App_normalizeComponent","Vue","config","productionTip","use","ElementUI","el","template"],"mappings":"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","file":"static/js/app.3765946d3ef12437d5e7.js","sourcesContent":["<template>\r\n  <div class=\"transfer-box transfer\" :style=\"{ width, height }\">\r\n    <!-- 左侧树框 -->\r\n    <div class=\"transfer-left\">\r\n      <div class=\"transfer-title\">\r\n        <el-checkbox\r\n          :indeterminate=\"treeIndeterminate\"\r\n          v-model=\"treeCheckAll\"\r\n          @change=\"treeAllBoxChange\"\r\n        >\r\n        </el-checkbox>\r\n        <span>{{ treeTitle }}</span>\r\n        <span class=\"total\">{{ treeLength }}/{{ treeCheckKeys.length }}</span>\r\n      </div>\r\n      <div class=\"transfer-main\">\r\n        <el-input\r\n          v-if=\"filterable\"\r\n          clearable\r\n          size=\"small\"\r\n          class=\"filter-input\"\r\n          :placeholder=\"filterPlaceholder\"\r\n          v-model=\"filterTree\"\r\n        >\r\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\r\n        </el-input>\r\n        <!-- 左侧树 -->\r\n        <el-tree\r\n          ref=\"from-tree\"\r\n          show-checkbox\r\n          :node-key=\"nodeKey\"\r\n          :props=\"defaultProps\"\r\n          :data=\"treeFromData\"\r\n          :accordion=\"accordion\"\r\n          :default-expand-all=\"openAll\"\r\n          :filter-node-method=\"filterNodeFrom\"\r\n          :render-after-expand=\"renderAfterExpand\"\r\n          :expand-on-click-node=\"expandOnClickNode\"\r\n          :default-checked-keys=\"defaultCheckedKeys\"\r\n          :default-expanded-keys=\"treeExpandedKeys\"\r\n          @check=\"fromTreeChecked\"\r\n          :check-strictly=\"fatherChoose\"\r\n        >\r\n        </el-tree>\r\n        <div class=\"slot-footer\" v-if=\"$slots['left-footer']\">\r\n          <slot name=\"left-footer\"></slot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- 穿梭区 按钮框 -->\r\n    <div class=\"transfer-center right-list-center\">\r\n      <el-button\r\n        type=\"primary\"\r\n        @click=\"listToTree()\"\r\n        :disabled=\"listCheckKey.length == 0\"\r\n      >\r\n        <i class=\"el-icon-arrow-left el-icon--left\"></i>\r\n        {{ leftButtonText }}\r\n      </el-button>\r\n\r\n      <el-button\r\n        type=\"primary\"\r\n        @click=\"treeToList()\"\r\n        :disabled=\"transferDisabled\"\r\n      >\r\n        {{ rightButtonText }}\r\n        <i class=\"el-icon-arrow-right el-icon--right\"></i>\r\n      </el-button>\r\n    </div>\r\n    <!-- 右侧列表区 -->\r\n    <div class=\"transfer-right\">\r\n      <div class=\"transfer-title\">\r\n        <el-checkbox\r\n          :indeterminate=\"listIndeterminate\"\r\n          v-model=\"listCheckAll\"\r\n          @change=\"listAllBoxChange\"\r\n        >\r\n        </el-checkbox>\r\n        <span>{{ listTitle }}</span>\r\n        <span class=\"total\"\r\n          >{{ rightList.length }}/{{ listCheckKey.length }}</span\r\n        >\r\n      </div>\r\n      <div class=\"transfer-main\">\r\n        <el-input\r\n          v-if=\"filterable\"\r\n          clearable\r\n          :placeholder=\"filterPlaceholder\"\r\n          v-model=\"filterList\"\r\n          size=\"small\"\r\n          class=\"filter-input\"\r\n        >\r\n          <i slot=\"prefix\" class=\"el-input__icon el-icon-search\"></i>\r\n        </el-input>\r\n        <!-- 右侧列表 -->\r\n        <el-checkbox-group\r\n          v-model=\"listCheckKey\"\r\n          class=\"el-transfer-panel__list\"\r\n        >\r\n          <el-checkbox\r\n            class=\"el-transfer-panel__item\"\r\n            v-for=\"item of rightList\"\r\n            :label=\"item[nodeKey]\"\r\n            :key=\"item[nodeKey]\"\r\n          >\r\n            {{ item.label }}\r\n          </el-checkbox>\r\n        </el-checkbox-group>\r\n        <div class=\"slot-footer\" v-if=\"$slots['right-footer']\">\r\n          <slot name=\"right-footer\"></slot>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: \"TransferTree\",\r\n  data() {\r\n    return {\r\n      treeKeys: [], //树所有节点的key\r\n      treeLength: 0, // 树所有节点数量\r\n      treeIndeterminate: false, // 源数据是否半选\r\n      treeCheckAll: false, // 源数据是否全选\r\n      treeExpandedKeys: [], // 源数据展开节点\r\n      treeCheckKeys: [], // 源数据选中key数组 以此属性关联穿梭按钮，总全选、半选状态\r\n      filterTree: \"\", // 源数据筛选\r\n      filterList: \"\", // 右侧数据筛选\r\n      archiveFirst: [], // 存档右侧筛选前数据\r\n      rightList: [], //右侧数据列表\r\n      listCheckKey: [], //右选中数据\r\n      listCheckAll: false, // 右侧列表是否全选\r\n    };\r\n  },\r\n  props: {\r\n    // 宽度\r\n    width: {\r\n      type: String,\r\n      default: \"800px\",\r\n    },\r\n    // 高度\r\n    height: {\r\n      type: String,\r\n      default: \"500px\",\r\n    },\r\n    // 标题\r\n    titles: {\r\n      type: Array,\r\n      default: () => [\"源数据\", \"目标列表\"],\r\n    },\r\n    // 源数据\r\n    dataSource: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    // el-tree 配置项\r\n    defaultProps: {\r\n      type: Object,\r\n      default: () => {\r\n        return { label: \"label\", children: \"children\" };\r\n      },\r\n    },\r\n    // el-tree node-key 必须唯一\r\n    nodeKey: {\r\n      type: String,\r\n      default: \"id\",\r\n    },\r\n    // 是否启用筛选\r\n    filterable: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否展开所有节点\r\n    openAll: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 源数据 默认选中节点\r\n    defaultCheckedKeys: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    // 源数据 默认展开节点\r\n    defaultExpandedKeys: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n    // 筛选placeholder\r\n    filterPlaceholder: {\r\n      type: String,\r\n      default: \"请输入搜索内容\",\r\n    },\r\n    // 是否每次只打开一个同级树节点\r\n    accordion: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否在第一次展开某个树节点后才渲染其子节点\r\n    renderAfterExpand: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否在点击节点的时候展开或者收缩节点\r\n    expandOnClickNode: {\r\n      type: Boolean,\r\n      default: true,\r\n    },\r\n    // 是否严格的遵循父子不互相关联的做法,父节点是否可选\r\n    fatherChoose: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 是否单选\r\n    isRadio: {\r\n      type: Boolean,\r\n      default: false,\r\n    },\r\n    // 穿梭按钮文案\r\n    buttonTexts: {\r\n      type: Array,\r\n      default: () => [],\r\n    },\r\n  },\r\n  computed: {\r\n    // 左侧数据\r\n    treeFromData() {\r\n      let fromArray = JSON.parse(JSON.stringify(this.dataSource));\r\n      return fromArray;\r\n    },\r\n    // 左侧菜单名\r\n    treeTitle() {\r\n      let [text] = this.titles;\r\n      return text;\r\n    },\r\n    // 右侧菜单名\r\n    listTitle() {\r\n      let [, text] = this.titles;\r\n      return text;\r\n    },\r\n    // 左侧按钮名\r\n    leftButtonText() {\r\n      let [text] = this.buttonTexts;\r\n      return text;\r\n    },\r\n    // 右侧侧按钮名\r\n    rightButtonText() {\r\n      let [, text] = this.buttonTexts;\r\n      return text;\r\n    },\r\n    // 右侧列表是否半选\r\n    listIndeterminate() {\r\n      const checkedLength = this.listCheckKey.length;\r\n      return checkedLength > 0 && checkedLength < this.rightList.length;\r\n    },\r\n    // 树穿梭按钮是否禁用\r\n    transferDisabled() {\r\n      let rightKeys = this.rightList.map((item) => item[this.nodeKey]);\r\n      let result =\r\n        this.treeCheckKeys.length > 0 &&\r\n        this.treeCheckKeys.every((item) => rightKeys.indexOf(item) > -1);\r\n      if (rightKeys.length == 0 && this.treeCheckKeys.length == 0) {\r\n        result = true;\r\n      }\r\n      return result;\r\n    },\r\n  },\r\n  watch: {\r\n    // 左侧树选中的key\r\n    treeCheckKeys(val) {\r\n      if (val.length > 0) {\r\n        // 总半选是否开启\r\n        this.treeIndeterminate = true;\r\n        if (val.length == this.treeLength) {\r\n          // 关闭半选 开启全选\r\n          this.treeIndeterminate = false;\r\n          this.treeCheckAll = true;\r\n        } else {\r\n          this.treeIndeterminate = true;\r\n          this.treeCheckAll = false;\r\n        }\r\n      } else {\r\n        this.treeIndeterminate = false;\r\n        this.treeCheckAll = false;\r\n      }\r\n    },\r\n    // 右侧列表选中的key\r\n    listCheckKey(val, oldVal) {\r\n      const movedKeys = [...val, ...oldVal].filter(\r\n        (v) => val.indexOf(v) === -1 || oldVal.indexOf(v) === -1\r\n      );\r\n      this.updateListAllChecked();\r\n      this.$emit(\"right-check-change\", val, movedKeys);\r\n    },\r\n    // 左侧 数据筛选\r\n    filterTree(val) {\r\n      this.$refs[\"from-tree\"].filter(val);\r\n    },\r\n    // 右侧 筛选\r\n    filterList(newval, oldval) {\r\n      if (oldval == \"\") {\r\n        this.archiveFirst = this.rightList;\r\n      }\r\n      if (newval == \"\") {\r\n        this.rightList = this.archiveFirst;\r\n      }\r\n      let reg = RegExp(newval);\r\n      this.rightList = this.rightList.filter((item) => reg.test(item.label));\r\n    },\r\n\r\n    // 监视默认选中\r\n    defaultCheckedKeys(val) {\r\n      this.treeCheckKeys = val;\r\n      this.findItem(this.treeFromData);\r\n      if (this.isRadio && this.rightList.length > 0) {\r\n        //回显判断如果是单选，左侧树全部disable\r\n        this.setDisable(this.treeFromData);\r\n      } else {\r\n        //回显判断如果是多选，选择的disable\r\n        this.chooseDisable(this.treeCheckKeys, this.treeFromData);\r\n      }\r\n    },\r\n    // 监视默认展开\r\n    defaultExpandedKeys: {\r\n      handler(val) {\r\n        let _form = new Set(this.treeExpandedKeys.concat(val));\r\n        this.treeExpandedKeys = [..._form];\r\n      },\r\n      immediate: true,\r\n    },\r\n  },\r\n\r\n  mounted() {\r\n    this.setTreeMsg(this.treeFromData);\r\n  },\r\n  methods: {\r\n    // 左侧树选中事件\r\n    fromTreeChecked(nodeObj) {\r\n      this.treeCheckKeys = this.$refs[\"from-tree\"].getCheckedKeys(\r\n        !this.fatherChoose\r\n      );\r\n      if (this.isRadio) {\r\n        this.setChecked([nodeObj.id]);\r\n      }\r\n      let currentKeys = [];\r\n      if (this.fatherChoose) {\r\n        currentKeys = [nodeObj[this.nodeKey]];\r\n      } else {\r\n        currentKeys = this.findChildKey([nodeObj]);\r\n      }\r\n      console.log(\"left-check-change\", this.treeCheckKeys, currentKeys);\r\n      this.$nextTick(() => {\r\n        this.$emit(\"left-check-change\", this.treeCheckKeys, currentKeys);\r\n      });\r\n    },\r\n\r\n    // 左侧树总全选checkbox\r\n    treeAllBoxChange(val) {\r\n      if (this.treeFromData.length == 0) {\r\n        return;\r\n      }\r\n      let listKey = this.rightList.map((item) => item[this.nodeKey]);\r\n      if (val) {\r\n        this.setChecked(this.treeKeys);\r\n        this.treeCheckKeys = this.treeKeys;\r\n      } else {\r\n        this.setChecked(listKey);\r\n        this.treeCheckKeys = listKey;\r\n      }\r\n      this.$emit(\"left-check-change\", this.treeCheckKeys);\r\n    },\r\n\r\n    // 左侧树筛选\r\n    filterNodeFrom(value, data) {\r\n      if (this.filterNode) {\r\n        return this.filterNode(value, data, \"form\");\r\n      }\r\n      if (!value) return true;\r\n      return data[this.defaultProps.label].indexOf(value) !== -1;\r\n    },\r\n\r\n    // 穿梭操作\r\n    treeToList() {\r\n      // 选中节点数据\r\n      let arrayCheckedNodes = this.$refs[\"from-tree\"].getCheckedNodes(\r\n        !this.fatherChoose\r\n      );\r\n      //取出本次移动的keys\r\n      let rightKeys = JSON.parse(\r\n        JSON.stringify(this.rightList.map((item) => item[this.nodeKey]))\r\n      );\r\n      const movedKeys = [...new Set(this.treeCheckKeys)].filter(\r\n        (item) => !new Set(rightKeys).has(item)\r\n      );\r\n      // 去重筛选\r\n      let arrayDeWeighting = [];\r\n      arrayDeWeighting = arrayCheckedNodes.filter((item) => {\r\n        if (\r\n          !this.rightList.some((ite) => ite[this.nodeKey] == item[this.nodeKey])\r\n        ) {\r\n          return item;\r\n        }\r\n      });\r\n      this.rightList = [...this.rightList, ...arrayDeWeighting];\r\n      if (this.isRadio) {\r\n        this.setDisable(this.treeFromData);\r\n      } else {\r\n        let chooseId = this.rightList.map((item) => item[this.nodeKey]);\r\n        this.chooseDisable(chooseId, this.treeFromData);\r\n      }\r\n      this.$emit(\"change\", this.treeCheckKeys, \"right\", movedKeys);\r\n    },\r\n\r\n    // 右侧列表数据 总全选checkbox\r\n    listAllBoxChange(val) {\r\n      if (val) {\r\n        this.listCheckKey = this.rightList.map((item) => item[this.nodeKey]);\r\n      } else {\r\n        this.listCheckKey = [];\r\n      }\r\n    },\r\n\r\n    // 右侧列表全选状态更新\r\n    updateListAllChecked() {\r\n      const keys = this.rightList.map((item) => item[this.nodeKey]);\r\n      this.listCheckAll =\r\n        keys.length > 0 &&\r\n        keys.every((item) => this.listCheckKey.indexOf(item) > -1);\r\n    },\r\n\r\n    // 右侧列表选中的数据回穿\r\n    listToTree() {\r\n      //树选中节点和列表选中节点的并集,筛选出移动的key\r\n      const movedKeys = [...new Set(this.treeCheckKeys)].filter((item) =>\r\n        new Set(this.listCheckKey).has(item)\r\n      );\r\n      this.rightList = this.listCheckAll\r\n        ? []\r\n        : this.rightList.filter(\r\n            (item) => !this.listCheckKey.includes(item[this.nodeKey]) && item\r\n          );\r\n      let chooseId = this.rightList.map((item) => item[this.nodeKey]);\r\n      this.chooseDisable(chooseId, this.treeFromData);\r\n      if (this.rightList.length == 0) {\r\n        this.treeIndeterminate = false;\r\n        this.treeCheckAll = false;\r\n      }\r\n      // 树选中节点和列表选中节点的差集,筛选出剩余的key\r\n      this.treeCheckKeys = [...new Set(this.treeCheckKeys)].filter(\r\n        (item) => !new Set(this.listCheckKey).has(item)\r\n      );\r\n      this.listCheckKey = [];\r\n      // 处理完毕取消选中\r\n      this.setChecked(chooseId);\r\n      this.$emit(\"change\", this.treeCheckKeys, \"left\", movedKeys);\r\n    },\r\n\r\n    //获取树所有节点key和数量,处理原始数据\r\n    setTreeMsg(arr) {\r\n      for (const item of arr) {\r\n        this.treeLength++;\r\n        this.treeKeys.push(item[this.nodeKey]);\r\n        if (this.isRadio && item.children && item.children.length > 0) {\r\n          item.disabled = true;\r\n        } else {\r\n          item.disabled = false;\r\n        }\r\n        if (item.children) {\r\n          this.setTreeMsg(item.children);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 设置选中数据\r\n    setChecked(leftKeys = []) {\r\n      this.$refs[\"from-tree\"].setCheckedKeys(leftKeys);\r\n    },\r\n\r\n    //根据key找节点\r\n    findItem(arr) {\r\n      for (const item of arr) {\r\n        if (this.defaultCheckedKeys.includes(item[this.nodeKey])) {\r\n          this.rightList.push(item);\r\n        }\r\n        if (item.children) {\r\n          this.findItem(item.children);\r\n        }\r\n      }\r\n    },\r\n\r\n    //找出子节点的key\r\n    findChildKey(arr, result = []) {\r\n      for (const item of arr) {\r\n        if (item.children.length == 0) {\r\n          result.push(item[this.nodeKey]);\r\n        }\r\n        if (item.children) {\r\n          this.findChildKey(item.children, result);\r\n        }\r\n      }\r\n      return result;\r\n    },\r\n\r\n    //使移动到右边的数据在左侧树下不可编辑\r\n    chooseDisable(value, arr) {\r\n      for (const item of arr) {\r\n        let choose = value.includes(item[this.nodeKey]);\r\n        if (choose) {\r\n          this.$set(item, \"disabled\", true);\r\n        } else {\r\n          this.$set(item, \"disabled\", false);\r\n        }\r\n        if (this.isRadio && !this.fatherChoose && item.children.length > 0) {\r\n          this.$set(item, \"disabled\", true);\r\n        }\r\n        if (item.children) {\r\n          this.chooseDisable(value, item.children);\r\n        }\r\n      }\r\n    },\r\n\r\n    //单选模式禁用左边的树选项\r\n    setDisable(arr) {\r\n      for (const item of arr) {\r\n        this.$set(item, \"disabled\", true);\r\n        if (item.children) {\r\n          this.setDisable(item.children);\r\n        }\r\n      }\r\n    },\r\n\r\n    // 获取左侧树选择信息\r\n    getTreeChecked() {\r\n      let leftKeys = this.$refs[\"from-tree\"].getCheckedKeys();\r\n      let leftHarfKeys = this.$refs[\"from-tree\"].getHalfCheckedKeys();\r\n      let leftNodes = this.$refs[\"from-tree\"].getCheckedNodes();\r\n      let leftHalfNodes = this.$refs[\"from-tree\"].getHalfCheckedNodes();\r\n      return {\r\n        leftKeys,\r\n        leftHarfKeys,\r\n        leftNodes,\r\n        leftHalfNodes,\r\n      };\r\n    },\r\n\r\n    // 清除搜索条件\r\n    clearQuery(type = \"all\") {\r\n      switch (type) {\r\n        case \"all\":\r\n          this.filterTree = \"\";\r\n          this.filterList = \"\";\r\n          break;\r\n        case \"left\":\r\n          this.filterTree = \"\";\r\n          break;\r\n        case \"right\":\r\n          this.filterList = \"\";\r\n          break;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style>\r\n.transfer-box {\r\n  position: relative;\r\n  overflow: hidden;\r\n}\r\n\r\n.el-tree {\r\n  min-width: 100%;\r\n  display: inline-block !important;\r\n}\r\n\r\n.transfer-left {\r\n  position: absolute;\r\n  top: 0;\r\n  left: 0;\r\n}\r\n\r\n.transfer-right {\r\n  position: absolute;\r\n  top: 0;\r\n  right: 0;\r\n}\r\n\r\n.transfer-main {\r\n  padding: 10px;\r\n  height: calc(100% - 41px);\r\n  box-sizing: border-box;\r\n  overflow: auto;\r\n}\r\n\r\n.transfer-left,\r\n.transfer-right {\r\n  border: 1px solid #ebeef5;\r\n  width: 40%;\r\n  height: 100%;\r\n  box-sizing: border-box;\r\n  border-radius: 5px;\r\n  vertical-align: middle;\r\n}\r\n\r\n.transfer-center {\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 40%;\r\n  width: 20%;\r\n  text-align: center;\r\n  vertical-align: center;\r\n}\r\n\r\n.right-list-center {\r\n  height: 100%;\r\n}\r\n\r\n.transfer-title {\r\n  display: grid;\r\n  grid-template-columns: 25px auto 50px;\r\n  border-bottom: 1px solid #ebeef5;\r\n  padding: 0 15px;\r\n  height: 40px;\r\n  line-height: 40px;\r\n  color: #333;\r\n  font-size: 16px;\r\n  background-color: #f5f7fa;\r\n  margin-top: 0;\r\n}\r\n\r\n.title-text {\r\n  overflow: hidden;\r\n  white-space: nowrap;\r\n  text-overflow: ellipsis;\r\n}\r\n\r\n.total {\r\n  text-align: right;\r\n  color: #909399;\r\n  font-size: 12px;\r\n}\r\n\r\n.el-transfer-panel__item {\r\n  padding-left: 6px;\r\n}\r\n\r\n.filter-input .el-input__inner {\r\n  margin-bottom: 10px;\r\n  height: 32px;\r\n  width: 100%;\r\n  font-size: 12px;\r\n  display: inline-block;\r\n  box-sizing: border-box;\r\n  border-radius: 16px;\r\n}\r\n\r\n.el-input__icon {\r\n  height: 32px;\r\n}\r\n\r\n.el-icon--left {\r\n  margin-right: 0;\r\n}\r\n\r\n.el-icon--right {\r\n  margin-left: 0;\r\n}\r\n\r\n.slot-footer {\r\n  height: 40px;\r\n  background: #fff;\r\n  margin: 0;\r\n  padding: 0;\r\n  border-top: 1px solid #ebeef5;\r\n  position: absolute;\r\n  bottom: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  z-index: 1;\r\n}\r\n</style>\r\n\n\n\n// WEBPACK FOOTER //\n// src/components/tree-transfer.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"transfer-box transfer\",style:({ width: _vm.width, height: _vm.height })},[_c('div',{staticClass:\"transfer-left\"},[_c('div',{staticClass:\"transfer-title\"},[_c('el-checkbox',{attrs:{\"indeterminate\":_vm.treeIndeterminate},on:{\"change\":_vm.treeAllBoxChange},model:{value:(_vm.treeCheckAll),callback:function ($$v) {_vm.treeCheckAll=$$v},expression:\"treeCheckAll\"}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.treeTitle))]),_vm._v(\" \"),_c('span',{staticClass:\"total\"},[_vm._v(_vm._s(_vm.treeLength)+\"/\"+_vm._s(_vm.treeCheckKeys.length))])],1),_vm._v(\" \"),_c('div',{staticClass:\"transfer-main\"},[(_vm.filterable)?_c('el-input',{staticClass:\"filter-input\",attrs:{\"clearable\":\"\",\"size\":\"small\",\"placeholder\":_vm.filterPlaceholder},model:{value:(_vm.filterTree),callback:function ($$v) {_vm.filterTree=$$v},expression:\"filterTree\"}},[_c('i',{staticClass:\"el-input__icon el-icon-search\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})]):_vm._e(),_vm._v(\" \"),_c('el-tree',{ref:\"from-tree\",attrs:{\"show-checkbox\":\"\",\"node-key\":_vm.nodeKey,\"props\":_vm.defaultProps,\"data\":_vm.treeFromData,\"accordion\":_vm.accordion,\"default-expand-all\":_vm.openAll,\"filter-node-method\":_vm.filterNodeFrom,\"render-after-expand\":_vm.renderAfterExpand,\"expand-on-click-node\":_vm.expandOnClickNode,\"default-checked-keys\":_vm.defaultCheckedKeys,\"default-expanded-keys\":_vm.treeExpandedKeys,\"check-strictly\":_vm.fatherChoose},on:{\"check\":_vm.fromTreeChecked}}),_vm._v(\" \"),(_vm.$slots['left-footer'])?_c('div',{staticClass:\"slot-footer\"},[_vm._t(\"left-footer\")],2):_vm._e()],1)]),_vm._v(\" \"),_c('div',{staticClass:\"transfer-center right-list-center\"},[_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.listCheckKey.length == 0},on:{\"click\":function($event){return _vm.listToTree()}}},[_c('i',{staticClass:\"el-icon-arrow-left el-icon--left\"}),_vm._v(\"\\n      \"+_vm._s(_vm.leftButtonText)+\"\\n    \")]),_vm._v(\" \"),_c('el-button',{attrs:{\"type\":\"primary\",\"disabled\":_vm.transferDisabled},on:{\"click\":function($event){return _vm.treeToList()}}},[_vm._v(\"\\n      \"+_vm._s(_vm.rightButtonText)+\"\\n      \"),_c('i',{staticClass:\"el-icon-arrow-right el-icon--right\"})])],1),_vm._v(\" \"),_c('div',{staticClass:\"transfer-right\"},[_c('div',{staticClass:\"transfer-title\"},[_c('el-checkbox',{attrs:{\"indeterminate\":_vm.listIndeterminate},on:{\"change\":_vm.listAllBoxChange},model:{value:(_vm.listCheckAll),callback:function ($$v) {_vm.listCheckAll=$$v},expression:\"listCheckAll\"}}),_vm._v(\" \"),_c('span',[_vm._v(_vm._s(_vm.listTitle))]),_vm._v(\" \"),_c('span',{staticClass:\"total\"},[_vm._v(_vm._s(_vm.rightList.length)+\"/\"+_vm._s(_vm.listCheckKey.length))])],1),_vm._v(\" \"),_c('div',{staticClass:\"transfer-main\"},[(_vm.filterable)?_c('el-input',{staticClass:\"filter-input\",attrs:{\"clearable\":\"\",\"placeholder\":_vm.filterPlaceholder,\"size\":\"small\"},model:{value:(_vm.filterList),callback:function ($$v) {_vm.filterList=$$v},expression:\"filterList\"}},[_c('i',{staticClass:\"el-input__icon el-icon-search\",attrs:{\"slot\":\"prefix\"},slot:\"prefix\"})]):_vm._e(),_vm._v(\" \"),_c('el-checkbox-group',{staticClass:\"el-transfer-panel__list\",model:{value:(_vm.listCheckKey),callback:function ($$v) {_vm.listCheckKey=$$v},expression:\"listCheckKey\"}},_vm._l((_vm.rightList),function(item){return _c('el-checkbox',{key:item[_vm.nodeKey],staticClass:\"el-transfer-panel__item\",attrs:{\"label\":item[_vm.nodeKey]}},[_vm._v(\"\\n          \"+_vm._s(item.label)+\"\\n        \")])}),1),_vm._v(\" \"),(_vm.$slots['right-footer'])?_c('div',{staticClass:\"slot-footer\"},[_vm._t(\"right-footer\")],2):_vm._e()],1)])])}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-1e215f8f\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/components/tree-transfer.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-1e215f8f\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../../node_modules/vue-loader/lib/selector?type=styles&index=0!./tree-transfer.vue\")\n}\nvar normalizeComponent = require(\"!../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./tree-transfer.vue\"\nimport __vue_script__ from \"!!babel-loader!../../node_modules/vue-loader/lib/selector?type=script&index=0!./tree-transfer.vue\"\n/* template */\nimport __vue_template__ from \"!!../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-1e215f8f\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../../node_modules/vue-loader/lib/selector?type=template&index=0!./tree-transfer.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/components/tree-transfer.vue\n// module id = null\n// module chunks = ","<template>\n  <div id=\"app\">\n    <tree-transfer ref=\"treeTransfer\" :data-source.sync=\"dataSource\" :defaultCheckedKeys=\"defaultValue\"\n      @left-check-change=\"handleLeftCheckChange\" @right-check-change=\"handleRightCheckChange\" @change=\"handleChange\"\n      :isRadio=\"false\" :filterable=\"true\" :father-choose=\"false\">\n    </tree-transfer>\n  </div>\n</template>\n\n<script>\nimport treeTransfer from \"./components/tree-transfer.vue\"\nconst tree = [\n  {\n    label: \"A部门\",\n    id: \"1\",\n    children: [\n      {\n        label: \"小明\",\n        children: [],\n        id: \"1-1\",\n      },\n      {\n        label: \"小红\",\n        children: [],\n        id: \"1-2\",\n      },\n      {\n        label: \"小刚\",\n        children: [],\n        id: \"1-3\",\n      },\n    ],\n  },\n  {\n    label: \"B部门\",\n    id: \"2\",\n    children: [\n      {\n        label: \"小王\",\n        children: [],\n        id: \"2-1\",\n      },\n      {\n        label: \"小李\",\n        children: [],\n        id: \"2-2\",\n      },\n      {\n        label: \"小朱\",\n        children: [],\n        id: \"2-3\",\n      },\n    ],\n  },\n]\nexport default {\n  name: \"App\",\n  components: {\n    treeTransfer,\n  },\n  data() {\n    return {\n      dataSource: tree,\n      defaultValue: [],\n\n    };\n  },\n  mounted() {\n    this.defaultValue = [\"1-2\"]\n  },\n  methods: {\n    handleChange(value, direction, currentKeys) {\n      console.log('handleChange', value, direction, currentKeys)\n    },\n    handleLeftCheckChange(value, currentKeys) {\n      console.log(\"handleLeftCheckChange:\", value, currentKeys);\n    },\n    handleRightCheckChange(value, currentKeys) {\n      console.log(\"handleRightCheckChange:\", value, currentKeys);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  width: 100%;\n  height: 80vh;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}\n</style>\n\n\n\n// WEBPACK FOOTER //\n// src/App.vue","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('tree-transfer',{ref:\"treeTransfer\",attrs:{\"data-source\":_vm.dataSource,\"defaultCheckedKeys\":_vm.defaultValue,\"isRadio\":false,\"filterable\":true,\"father-choose\":false},on:{\"update:dataSource\":function($event){_vm.dataSource=$event},\"update:data-source\":function($event){_vm.dataSource=$event},\"left-check-change\":_vm.handleLeftCheckChange,\"right-check-change\":_vm.handleRightCheckChange,\"change\":_vm.handleChange}})],1)}\nvar staticRenderFns = []\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-2630369d\",\"hasScoped\":false,\"transformToRequire\":{\"video\":[\"src\",\"poster\"],\"source\":\"src\",\"img\":\"src\",\"image\":\"xlink:href\"},\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0!./src/App.vue\n// module id = null\n// module chunks = ","function injectStyle (ssrContext) {\n  require(\"!!../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"sourceMap\\\":true}!../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-2630369d\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!../node_modules/vue-loader/lib/selector?type=styles&index=0!./App.vue\")\n}\nvar normalizeComponent = require(\"!../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nexport * from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\nimport __vue_script__ from \"!!babel-loader!../node_modules/vue-loader/lib/selector?type=script&index=0!./App.vue\"\n/* template */\nimport __vue_template__ from \"!!../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-2630369d\\\",\\\"hasScoped\\\":false,\\\"transformToRequire\\\":{\\\"video\\\":[\\\"src\\\",\\\"poster\\\"],\\\"source\\\":\\\"src\\\",\\\"img\\\":\\\"src\\\",\\\"image\\\":\\\"xlink:href\\\"},\\\"buble\\\":{\\\"transforms\\\":{}}}!../node_modules/vue-loader/lib/selector?type=template&index=0!./App.vue\"\n/* template functional */\nvar __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/App.vue\n// module id = null\n// module chunks = ","// The Vue build version to load with the `import` command\n// (runtime-only or standalone) has been set in webpack.base.conf with an alias.\nimport Vue from 'vue'\nimport App from './App'\nimport ElementUI from 'element-ui';\nimport 'element-ui/lib/theme-chalk/index.css';\n\nVue.config.productionTip = false\nVue.use(ElementUI);\n/* eslint-disable no-new */\nnew Vue({\n  el: '#app',\n  components: { App },\n  template: '<App/>'\n})\n\n\n\n// WEBPACK FOOTER //\n// ./src/main.js"],"sourceRoot":""}